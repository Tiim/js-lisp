(begin
  (print "(+ 0 1)")
  (print (+ 0 1))
  (print "(- 1)")
  (print (- 1))
  (print "(- 10 2)")
  (print (- 10 2))
  (print "(* 2 2.5)")
  (print (* 2 2.5))
  (print "(/ 12 4)")
  (print (/ 12 4))
  (print "(atom 'a)")
  (print (atom 'a))
  (print "(begin (+ 1 1) 'a)")
  (print (begin (+ 1 1) 'a))
  (print "(car '(a b c))")
  (print (car '(a b c)))
  (print "(cdr '(a b c))")
  (print (cdr '(a b c)))
  (print "(cond ((atom '(1 2)) 'isatom) ('t 'isnotatom))")
  (print (cond ((atom '(1 2)) 'isatom) ('t 'isnotatom)))
  (print "(cons 'a 'b 'c)")
  (print (cons 'a 'b 'c))
  (print "(defun addone (x) (+ 1 x)")
  (print "(addone 100)")
  (defun addone (x) (+ 1 x))
  (print (addone 100))
  (print "(display 'a)")
  (print (begin (display 'a) 't))
  (print "(print)")
  (print "this whole file uses print already")
  (print "(eq 1 2)")
  (print (eq 1 2))
  (print "(eq 'a 'a)")
  (print (eq 'a 'a))
  (print "(eval '(+ 10 20))")
  (print (eval '(+ 10 20)))
  (print "(label x 'mylabel)")
  (print "x")
  (print (label x 'mylabel))
  (print x)
  (print "((lambda (x y) (+ x y)) 15 7)")
  (print ((lambda (x y) (+ x y)) 15 7))
  (print "(list 1 2 3 4 5 'a 'b)")
  (print (list 1 2 3 4 5 'a 'b))
  (print "(load)")
  (print "this file is already loaded no need to test it again")
  (print "(parse a string)")
  (print (parse "(+ 10 27.2)"))
  (print "eval parsed string")
  (print (eval (car (parse "(+ 10 27.2)"))))
  (print "(cons (quote x) 'x)")
  (print (cons (quote x) 'x))
  't
)